var test = require('tape');
var bezier = require('./bezier');
var vec3 = require('gl-vec3');
var util = require('./util');

var input = [ [ 0, 0, 0 ],
              [ 0, 0, 1 ],
              [ 0, 1, 1 ],
              [ 1, 1, 1 ] ];

test('simple case with four points, 8 segments', function (t) {
  var result = util.newZeroedArray(8 + 1); // 9 points define 8 segments
  bezier.calcBezier(result, input, 8);

  var expected = [ [ 0, 0, 0 ],
                   [ 0.001953125, 0.04296875, 0.330078125 ],
                   [ 0.015625, 0.15625, 0.578125 ],
                   [ 0.052734375, 0.31640625, 0.755859375 ],
                   [ 0.125, 0.5, 0.875 ],
                   [ 0.244140625, 0.68359375, 0.947265625 ],
                   [ 0.421875, 0.84375, 0.984375 ],
                   [ 0.669921875, 0.95703125, 0.998046875 ],
                   [ 1, 1, 1 ] ];

  t.deepEqual(result, expected);
  t.end();
});

test('simple case with four points, 12 segments', function (t) {
  var result = util.newZeroedArray(12 + 1);

  bezier.calcBezier(result, input, 12);

  var expected = [ [ 0, 0, 0 ],
                   [ 0.0005787037037037037, 0.019675925925925923, 0.22974537037037038 ],
                   [ 0.004629629629629629, 0.07407407407407407, 0.4212962962962963 ],
                   [ 0.015625, 0.15625, 0.578125 ],
                   [ 0.037037037037037035, 0.2592592592592593, 0.7037037037037037 ],
                   [ 0.07233796296296297, 0.37615740740740744, 0.8015046296296297 ],
                   [ 0.125, 0.5, 0.875 ],
                   [ 0.19849537037037038, 0.6238425925925926, 0.9276620370370371 ],
                   [ 0.2962962962962963, 0.7407407407407407, 0.962962962962963 ],
                   [ 0.421875, 0.84375, 0.9843750000000001 ],
                   [ 0.5787037037037037, 0.9259259259259259, 0.9953703703703706 ],
                   [ 0.7702546296296297, 0.9803240740740741, 0.9994212962962966 ],
                   [ 1, 1, 1 ] ];
  
  t.deepEqual(result, expected);
  t.end();
});